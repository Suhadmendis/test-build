{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ZoomMtg","setZoomJSLib","preLoadWasm","prepareJssdk","App","history","useState","name","mobile","modal","errorMessage","state","useEffect","console","log","window","location","href","username","qs","parse","ignoreQueryPrefix","fetch","signatureEndpoint","method","headers","body","JSON","stringify","meetingNumber","role","then","res","json","response","startMeeting","signature","catch","error","document","getElementById","style","display","init","leaveUrl","isSupportAV","success","join","userName","apiKey","userEmail","passWord","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oQAKAA,QAAQC,aAAa,mCAAoC,OAEzDD,QAAQE,cACRF,QAAQG,eAuHOC,MArHf,SAAaC,GAAU,IAAD,EAEMC,mBAAS,CACjCC,KAAM,GACNC,OAAQ,GACRC,OAAO,EACPC,aAAc,KANI,mBAEbC,EAFa,UASpBC,qBAAU,WACRC,QAAQC,IAAI,0BACZD,QAAQC,IAAIC,OAAOC,SAASC,MAC5B,IAmBiBC,EAnBbX,EAAOY,IAAGC,MAAML,OAAOC,SAASC,KAAM,CAAEI,mBAAmB,IAAQd,KACnEC,EAASW,IAAGC,MAAML,OAAOC,SAASC,KAAM,CAAEI,mBAAmB,IAAQb,OAGzEK,QAAQC,IAAIP,EAAMC,GAeDU,EAdPX,EAiBVe,MAAMC,EAAmB,CACvBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,cAAeA,EACfC,KAfK,MAiBNC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJC,EAAaD,EAASE,UAAWlB,MAChCmB,OAAM,SAAAC,GACPzB,QAAQyB,MAAMA,QA3BjB,IAGH,IAAIf,EAAoB,4CAEpBM,EAAgB,cA4CpB,SAASM,EAAaC,EAAWlB,GAC/BqB,SAASC,eAAe,cAAcC,MAAMC,QAAU,QAEtD1C,QAAQ2C,KAAK,CACXC,SA9CW,6BA+CXC,aAAa,EAEbC,QAAS,SAACA,GACRjC,QAAQC,IAAIgC,GAEZ9C,QAAQ+C,KAAK,CACXX,UAAWA,EACXP,cAAeA,EACfmB,SAAU9B,EACV+B,OA3DK,yBA4DLC,UAvDQ,sBAwDRC,SAvDO,SAwDPL,QAAS,SAACA,GACRjC,QAAQC,IAAIgC,IAGdR,MAAO,SAACA,GACNzB,QAAQC,IAAIwB,OAKlBA,MAAO,SAACA,GACNzB,QAAQC,IAAIwB,MAUlB,OA/Ee3B,EAAMJ,KAgFnB,qBAAK6C,UAAU,MAAf,SACE,4BCzGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASC,eAAe,SAM1Ba,M","file":"static/js/main.2f5332a1.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport qs from 'qs'\ndeclare var ZoomMtg\n\nZoomMtg.setZoomJSLib('https://source.zoom.us/1.9.0/lib', '/av');\n\nZoomMtg.preLoadWasm();\nZoomMtg.prepareJssdk();\n\nfunction App(history) {\n\n  const [state, setState] = useState({\n    name: \"\",\n    mobile: \"\",\n    modal: false,\n    errorMessage: \"\",\n  })\n\n  useEffect(() => {\n    console.log('Start the meeting here');\n    console.log(window.location.href)\n    let name = qs.parse(window.location.href, { ignoreQueryPrefix: true }).name\n    let mobile = qs.parse(window.location.href, { ignoreQueryPrefix: true }).mobile\n    // let name = \"pubudu\";\n    // let mobile = \"12231222312\";\n    console.log(name, mobile)\n    autoStart(name);\n  }, []);\n\n  // setup your signature endpoint here: https://github.com/zoom/websdk-sample-signature-node.js\n  var signatureEndpoint = 'https://tallees-live-stream.herokuapp.com'\n  var apiKey = 'Tjlif8m9SD6vfuL5O_fYug'\n  var meetingNumber = '96071217067'\n  var role = 0\n  var leaveUrl = 'http://tallees.encyte.tech'\n  var userName = state.name\n  var userEmail = 'events@talleess.com'\n  var passWord = '378987'\n\n\n  function autoStart(username) {\n    // e.preventDefault();\n\n    fetch(signatureEndpoint, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        meetingNumber: meetingNumber,\n        role: role\n      })\n    }).then(res => res.json())\n      .then(response => {\n        startMeeting(response.signature, username)\n      }).catch(error => {\n        console.error(error)\n      })\n  }\n\n  function getSignature(e) {\n    e.preventDefault();\n\n    fetch(signatureEndpoint, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        meetingNumber: meetingNumber,\n        role: role\n      })\n    }).then(res => res.json())\n      .then(response => {\n        startMeeting(response.signature)\n      }).catch(error => {\n        console.error(error)\n      })\n  }\n\n  function startMeeting(signature, username) {\n    document.getElementById('zmmtg-root').style.display = 'block'\n\n    ZoomMtg.init({\n      leaveUrl: leaveUrl,\n      isSupportAV: true,\n      // isShowJoiningErrorDialog: false,\n      success: (success) => {\n        console.log(success)\n\n        ZoomMtg.join({\n          signature: signature,\n          meetingNumber: meetingNumber,\n          userName: username,\n          apiKey: apiKey,\n          userEmail: userEmail,\n          passWord: passWord,\n          success: (success) => {\n            console.log(success)\n            // changeStyles()\n          },\n          error: (error) => {\n            console.log(error)\n          }\n        })\n\n      },\n      error: (error) => {\n        console.log(error)\n      }\n    })\n  }\n\n  function changeStyles() {\n    document.getElementsByClassName('meeting-app').style.width = '400px'\n    document.getElementsByClassName('meeting-app').style.height = '400px'\n  }\n\n  return (\n    <div className=\"App\">\n      <main>\n        {/* <h4 style={{ marginTop: '10%' }}>You will be redirected to the webinar soon. If you are not redirected, please click \"Join Meeting\"  below.</h4> */}\n\n        {/* <button onClick={getSignature}>Start Webinar</button> */}\n      </main>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/uikit/dist/css/uikit.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}